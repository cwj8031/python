	如何为元组中的每个元素命名，提高程序的可读性？

	1、学生信息系统中数据为固定格式：
	（名字，年龄，性别，邮箱地址，……）
	格式固定，可以使用元组
	2、学生数量很大，为了减少存储开销，对每个学生信息用元组表示：
	('Jim',16,'male','Jim8721@gmail.com')
	……

	访问时，我们使用引索(index)访问，大量引索降低程序可读性。如何解决这个问题？

	存在的问题：
	student=('Jim',16,'male','Jim8721@gmail.com')

	#name   访问名字
	print student[0]
	#age	访问年龄
	if student[1]>=18:
	#sex	访问性别
	if student[2]=='male':

	这些数据对程序的维护不利，我们很难识别索引值0，1，2，3是做什么的

	解决，把他们变成名字
	方案1：定义类似与其他语言的枚举类型，也就是定义一系列数值常量
	方案2：使用标准库中collections.namedtuple替代内置tuple

	方案一：定义常量
	NAME=0
	AGE=1
	SEX=2
	EMAIL=3

	或者
	NAME,AGE,SEX,EMAIL=xrange(4)

	访问的时候就可以直接用这个名字了
	print student[NAME]
	if student[AGE]>=18:
	if student[SEX]=='male':

	方案二：使用标准库中的collections.namedtuple替代内置tuple
	from collections import namedtuple
	student=namedtuple('student',['name','age','sex','email'])
	s=student('Jim',16,'male','Jim8721@gmail.com')
	s.name   s.age   s.sex   s.email

